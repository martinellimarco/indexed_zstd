name: Publish to PyPI

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  Deploy-Wheels:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        manylinux-image: [manylinux2014]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade-strategy eager --upgrade cython twine cibuildwheel

    - name: Build Tarball
      if: matrix.os == 'ubuntu-latest'
      run: python3 setup.py sdist

    - name: Build Wheels
      env:
        CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.manylinux-image }}
        CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_1
        CIBW_ARCHS: auto64
        CIBW_BEFORE_ALL_LINUX: yum install -y libzstd-devel || apk add zstd-dev
        CIBW_BEFORE_ALL_MACOS: brew install zstd
        CIBW_BEFORE_BUILD_WINDOWS: "python {package}/libzstd/_get_zstd.py && pip install delvewheel"
        CIBW_REPAIR_WHEEL_COMMAND_WINDOWS: "delvewheel repair -w {dest_dir} {wheel}"
      run: python -m cibuildwheel --output-dir dist

    - name: Check Wheels
      run: twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: twine upload --skip-existing -u __token__ dist/*


  Deploy-Tarball:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.11'

    - name: Install Dependencies
      run: |
        python3 -m pip install --upgrade pip
        python3 -m pip install --upgrade-strategy eager --upgrade cython setuptools twine

    - name: Create Tarball
      run: python3 setup.py sdist

    - name: Check Wheels
      run: twine check dist/*

    - name: Publish to PyPI
      env:
        TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}
      run: echo twine upload --skip-existing -u __token__ dist/*
